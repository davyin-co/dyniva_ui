// 单个值
.position-single(@nameSuffix, @size, @v-properties, @isMinus: false) when (length(@v-properties) = 1){
  @selector: if(@isMinus, ~'-@{v-properties}-@{nameSuffix}', ~'@{v-properties}-@{nameSuffix}');

  .@{selector} {
    @{v-properties}: if(@isMinus, @size * -1, @size);
  }
}

// 多个值
.position-multiple(@nameSuffix, @size, @k-name, @v-properties, @isMinus: false) when (length(@v-properties) > 1){
  @selector: if(@isMinus, ~'-inset-@{k-name}-@{nameSuffix}', ~'inset-@{k-name}-@{nameSuffix}');

  .@{selector} {
    each(@v-properties,.(@v-property) {
      @{v-property}: if(@isMinus, @size * -1, @size);
    })
  }
}

// 生成负的
.position-minus(@nameSuffix, @size, @useMinus) when (@useMinus) {
  each(.direction-abbreviation(), .(@v-properties, @k-name){

    .position-single(@nameSuffix, @size, @v-properties, @isMinus: true);
    .position-multiple(@nameSuffix, @size, @k-name, @v-properties, @isMinus: true);
  })

  .-inset-@{nameSuffix} {
    left: @size * -1;
    right: @size * -1;
    bottom: @size * -1;
    top: @size * -1;
  }
}

// base
.position(@nameSuffix, @size) {
  each(.direction-abbreviation(), .(@v-properties, @k-name){

    .position-single(@nameSuffix, @size, @v-properties);
    .position-multiple(@nameSuffix, @size, @k-name, @v-properties);
  })

  .inset-@{nameSuffix} {
    left: @size;
    right: @size;
    bottom: @size;
    top: @size;
  }

  // auto和0的时候不生成负的类
  @useMinus: if((@nameSuffix = auto) or (@nameSuffix = 0), false, true);
  .position-minus(@nameSuffix, @size, @useMinus);
}
