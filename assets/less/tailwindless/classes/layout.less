// box-sizing
.box-border {
  box-sizing: border-box;
}
.box-content {
  box-sizing: content-box;
}

// display
@display: {
  hidden: none;
  display-block: block;
  inline: inline;
  inline-block: inline-block;
  flex: flex;
  inline-flex: inline-flex;
  table: table;
  inline-table: inline-table;
}
each(@display, .(@display-value, @display-name) {
  .@{display-name} {
    display: @display-value;
  }
})
each(#table.responsive(), .(@vResponsive, @kResponsive) {
  @screenName: ~'screen-@{kResponsive}';
  @namePrefix: ~'@{kResponsive}\|';

  @media (min-width: @@screenName) {
    each(@display, .(@display-value, @display-name) {
      .@{namePrefix}@{display-name} {
        display: @display-value;
      }
    })
  }
})

// float
.float-left {
  float: left;
}
.float-right {
  float: right;
}
.float-none {
  float: none;
}

// clear
.clear-left {
  clear: left;
}
.clear-right {
  clear: right;
}
.clear-both {
  clear: both;
}
.clear-none {
  clear: none;
}

// bject fit
.object-contain {
  object-fit: contain;
}
.object-cover {
  object-fit: cover;
}
.object-fill {
  object-fit: fill;
}
.object-none {
  object-fit: none;
}
.object-scale-down {
  object-fit: scale-down;
}

// bject position
.object-bottom {
  object-position: bottom;
}
.object-center {
  object-position: center;
}
.object-left {
  object-position: left;
}
.object-left-bottom {
  object-position: left bottom;
}
.object-left-top {
  object-position: left top;
}
.object-right {
  object-position: right;
}
.object-right-bottom {
  object-position: right bottom;
}
.object-right-top {
  object-position: right top;
}
.object-top {
  object-position: top;
}

// overflow
.overflow-auto {
  overflow: auto;
}
.overflow-x-auto {
  overflow-x: auto;
}
.overflow-y-auto {
  overflow-y: auto;
}
.overflow-hidden {
  overflow: hidden;
}
.overflow-hidden\! {
  overflow: hidden !important;
}
.overflow-x-hidden {
  overflow-x: hidden;
}
.overflow-y-hidden {
  overflow-y: hidden;
}
.overflow-visible {
  overflow: visible;
}
.overflow-x-visible {
  overflow-x: visible;
}
.overflow-y-visible {
  overflow-y: visible;
}
.overflow-scroll {
  overflow: scroll;
}
.overflow-x-scroll {
  overflow-x: scroll;
}
.overflow-y-scroll {
  overflow-y: scroll;
}

// position
@position: static, fixed, absolute, relative, sticky;
each(@position, .(@position-value){
  .@{position-value} {
    position: @position-value;
  }
})
each(#table.responsive(), .(@vResponsive, @kResponsive) {
  @screenName: ~'screen-@{kResponsive}';
  @namePrefix: ~'@{kResponsive}\|';

  @media (min-width: @@screenName) {
    each(@position, .(@position-value){
      .@{namePrefix}@{position-value} {
        position: @position-value;
      }
    })
  }
})

.position(0, 0px);
.position(auto, auto);
.position(~"1\/2", 50%);
.position(full, 100%);
each(#table.responsive(), .(@vResponsive, @kResponsive) {
  @screenName: ~'screen-@{kResponsive}';
  @namePrefix: ~'@{kResponsive}\|';

  @media (min-width: @@screenName) {
    .position(0, 0px, @namePrefix: @namePrefix);
    .position(auto, auto, @namePrefix: @namePrefix);
    .position(~"1\/2", 50%, @namePrefix: @namePrefix);
    .position(full, 100%, @namePrefix: @namePrefix);
  }
})

// visibility
.visible {
  visibility: visible;
}
.invisible {
  visibility: hidden;
}

// z-index
.z-index(0, @hover: true);
.z-index(1, @hover: true, @minus: true);
// 2, 3, 4, 5, 6, 7, 8, 9, 10
each(range(2, 10, 1), {
  .z-index(@value, @hover: true);
})
.z-index(99, @hover: true);
.z-index(100, @hover: true);
.z-index(auto, @hover: true);

// ratio
.ratio-1\/2 {
  padding-top: 50%;
}
.ratio-9\/16 {
  padding-top: 56.25%;
}
.ratio-2\/3 {
  padding-top: 2/3 * 100%;
}
.ratio-3\/4 {
  padding-top: 75%;
}
.ratio-5\/4 {
  padding-top: 125%;
}
.ratio-3\/2 {
  padding-top: 150%;
}
.ratio-7\/4 {
  padding-top: 175%;
}
.ratio-2\/1 {
  padding-top: 200%;
}
